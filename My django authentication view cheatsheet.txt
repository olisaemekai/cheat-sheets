Add the following your app's urls.py:
	
	###
	from django.contrib.auth import views as auth_views
	
	urlpatterns = [
		###
		path('login/', auth_views.LoginView.as_view(), name='login'),
		path('logout/', auth_views.LogoutView.as_view(), name='logout')
	]

Create a directory called 'registration' in the template directory of your app, and
add  login.html and logged_out.html.

**IN the login.html, you can add the following:

	{% extends "base.html" %}
	{% block title %}Log-in{% endblock %}
	{% block content %}
		<h1>Log-in</h1>
		{% if form.errors %}
			<p>
			Your username and password didn't match.
			Please try again.
			</p>
		{% else %}
			<p>Please, use the following form to log-in:</p>
		{% endif %}
		<div class="login-form">
			<form action="{% url 'login' %}" method="post">
				{{ form.as_p }}
				{% csrf_token %}
				<input type="hidden" name="next" value="{{ next }}" />
				<p><input type="submit" value="Log-in"></p>
			</form>
		</div>
	{% endblock %}

** IN the logged_out.html, you can add the following:
{% extends "base.html" %}
{% block title %}Logged out{% endblock %}
{% block content %}
	<h1>Logged out</h1>
	<p>You have been successfully logged out. You can <a href="{% url
	"login" %}">log-in again</a>.</p>
{% endblock %}

**Next, you should created the view that will be redirected to after user authentication.
**Don't forget to add the view to your url patterns

Note, you need to include the following to your project url:
LOGIN_REDIRECT_URL = 'name_of_the_url_to_be_redirected_to'
LOGIN_URL = 'the name of the login url'
LOGOUT_URL = 'the name of the loggout url'

Note: Your app should be placed at the first position in the INSTALLED_APPS settings

-----------------------------------------------------------------
### CHANGING PASSWORD
Add the following to your app's urlpatterns:
urlpatterns += [
	path('password_change/', auth_views.PasswordChangeView.as_view(), name='password_change'),
	path('password_change/done/', auth_views.PasswordChangeDoneView.as_view(), name='password_change_done'),
]
PasswordChangeView will handle the form to change the password
PasswordChangeDoneView will display a success message after the user has successfully changed his password

Next, create the template for the PasswordChangeView (password_change_form.html) and PasswordChangeDoneView (password_change_done.html). 
The templates should be in the 'registration' directory of your 'templates' directory
Sample templates are shown below:

## password_change_form.html
{% extends "base.html" %}
{% block title %}Change you password{% endblock %}
{% block content %}
	<h1>Change you password</h1>
	<p>Use the form below to change your password.</p>
	<form action="." method="post">
		{{ form.as_p }}
		<p><input type="submit" value="Change"></p>
		{% csrf_token %}
	</form>
{% endblock %}

## password_change_done.html
{% extends "base.html" %}
{% block title %}Password changed{% endblock %}
{% block content %}
	<h1>Password changed</h1>
	<p>Your password has been successfully changed.</p>
{% endblock %}

-------------------------------------------------------------
### RESETTING PASSWORD
Just as with changing password, add the following to your app's urlpatterns

# reset password urls
urlpattern += [
	path('password_reset/', auth_views.PasswordResetView.as_view(),name='password_reset'),
	path('password_reset/done/', auth_views.PasswordResetDoneView.as_view(),name='password_reset_done'),
	path('reset/<uidb64>/<token>/', auth_views.PasswordResetConfirmView.as_view(), name='password_reset_confirm'),
	path('reset/done/', auth_views.PasswordResetCompleteView.as_view(), name='password_reset_complete'),
	]

Add the following to the registration directory of your templates directory:

i. password_reset_form.html: this contains the form for requesting for password reset
		{% extends "base.html" %}
		{% block title %}Reset your password{% endblock %}
		{% block content %}
			<h1>Forgotten your password?</h1>
			<p>Enter your e-mail address to obtain a new password.</p>
			<form action="." method="post">
				{{ form.as_p }}
				<p><input type="submit" value="Send e-mail"></p>
				{% csrf_token %}
			</form>
		{% endblock %}

ii. password_reset_email.html: This contains the mail that will be sent to users to reset their password.

	Someone asked for password reset for email {{ email }}. Follow the link below:
	{{ protocol }}://{{ domain }}{% url "password_reset_confirm" uidb64=uid 	token=token %}
	Your username, in case you've forgotten: {{ user.get_username }}

iii. password_reset_done.html: This is template that is display after the mail has been sent to user.

	{% extends "base.html" %}
	{% block title %}Reset your password{% endblock %}
	{% block content %}
		<h1>Reset your password</h1>
		<p>We've emailed you instructions for setting your password.</p>
		<p>If you don't receive an email, please make sure you've entered the
		address you registered with.</p>
	{% endblock %}

iv. password_reset_confirm.html: This the template for inputing new password

	{% extends "base.html" %}
	{% block title %}Reset your password{% endblock %}
	{% block content %}
		<h1>Reset your password</h1>
		{% if validlink %}
			<p>Please enter your new password twice:</p>
			<form action="." method="post">
			{{ form.as_p }}
			{% csrf_token %}
			<p><input type="submit" value="Change my password" /></p>
			</form>
		{% else %}
			<p>The password reset link was invalid, possibly because it has already been used. Please request a new password reset.</p>
		{% endif %}
	{% endblock %}

v. password_reset_complete.html: This is the template that is display when password reset has been completed
	
	{% extends "base.html" %}
	{% block title %}Password reset{% endblock %}
	{% block content %}
		<h1>Password set</h1>
		<p>Your password has been set. You can <a href="{% url "login" %}">log in
		now</a></p>
	{% endblock %}


Note: Don't forget to add the email you are using in your settings folder
For console (during local development) use: 
	EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

Finally also note that instead of creating the urlpatterns we used in this section,
we could urls provided boy the django.contrib.auth.urls by adding the following to your app's urlpatterns
	path('', include('django.contrib.auth.urls')),


## User Registration
Read User Registration under Building a Social Website of Django By Example

----------------------------------------------------------------------------
Further reading on login and logout view, changing password views, and resetting password views,
check django document at:
	django-docs-3.0-en/topics/auth/default.html#module-django.contrib.auth.views
